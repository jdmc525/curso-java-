/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.jlist_001;
import javax.swing.DefaultListModel; //se importa esto para que sirva lo de la linea 71
import javax.swing.JOptionPane;
/**
 *
 * @author Daniel
 */
public class JLIST_MAIN extends javax.swing.JFrame {
    
    //Declarar el modelo de la lista como variable global(atributo) 
    /*Con variable global nos referimos a que su ambito es en toda la clase, es decir que se puede acceder 
      desde cualquier funcion que este dentro de la clase para modificarlo o usarlo
    */
    
    DefaultListModel modelo;
    
    
    //Funcion/Metodo para sumar los animales 
    public void resumen(){
        //recorrer la lista de animales y contar cuantos tienen 5 o mas caracteres y cuentos menos de 5 caracteres
        int x=0,y=0;
        
        //recorrer el modelo
        for (int i = 0; i < modelo.size(); i++) {  //modelo.size es el tamaÃ±o del modelo desde 0 en adelante
            //analizar cada elemento
            if (modelo.getElementAt(i).toString().trim().length() >=5   ) { //getElementAt() nos da un elemento de tipo object no STRING
                x++; //si tiene mas de 5 chars va a las x
            }else{
               y++; //si tiene menos de 5 chars va a las y
            }
        }
        
        //poner los resultados en las cjaas de texto
        txtCincoMas.setText(String.valueOf(x));
        txtCincoMenos.setText(String.valueOf(y));
    }
    
    
    /**
     * Creates new form JLIST_MAIN
     */
    public JLIST_MAIN() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();
        btnAgregar2 = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        cajaAgregar = new javax.swing.JTextField();
        btnAgregar1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCincoMas = new javax.swing.JTextField();
        txtCincoMenos = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JOSE DANIEL MEJIA CUELLAR 20212030242");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lista.setBackground(new java.awt.Color(153, 255, 153));
        lista.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lista.setForeground(new java.awt.Color(0, 0, 0));
        lista.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lista);

        btnAgregar2.setText("AGREGAR");
        btnAgregar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregar2ActionPerformed(evt);
            }
        });

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnAgregar1.setText("AGREGAR");
        btnAgregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregar1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Animales de 5 o mas letras:");

        txtCincoMas.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtCincoMas.setText("0");

        txtCincoMenos.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtCincoMenos.setText("0");

        jLabel2.setText("Animales de menos de 5 letras:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cajaAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAgregar1))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAgregar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCincoMas)
                    .addComponent(txtCincoMenos)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cajaAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar2)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCincoMas, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCincoMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 20, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       //Llenar el JLIST por programacion
       
       //Iniciar el modelo que se habia declarado arriba  en linea 18
       modelo = new DefaultListModel();
       
       //Colocar elementos de prueba en el modelo
       modelo.addElement("Perro");
       modelo.addElement("Gato");
       modelo.addElement("Loro");
       modelo.addElement("Gallina");
       
       //Asignar el modelo a la lista
       lista.setModel(modelo);
       
       //Esto manda a llamar la funcion de arriba para que cuente lo de los caracteres de la lista  
       resumen();
    }//GEN-LAST:event_formWindowOpened

    private void btnAgregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregar1ActionPerformed
        if(cajaAgregar.getText().trim().length() >0){
            modelo.addElement(cajaAgregar.getText().trim());
            cajaAgregar.setText(""); //para vaciar la caja de texto despues de agregar 
        
            resumen();
        }  
    }//GEN-LAST:event_btnAgregar1ActionPerformed

    private void btnAgregar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregar2ActionPerformed
        //Agregar usando JOPTION PANE
        /*Si hace click en cancelar o en la x entonces str pasara a ser NULL,
        osea que no tiene memoria y no se puede usar pero no pasa nada*/
        
        String str = JOptionPane.showInputDialog(this, "Digite un animal");
        if(str != null ){  //esto es el equivalente a validar si esta lleno o no
            if (str.trim().length()>0) {
            modelo.addElement(str.trim());    
            resumen();
            }
        }
        
        
    }//GEN-LAST:event_btnAgregar2ActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        //Validar si se ha seleccionado un elemento en la lista
        /*getSelectedIndex() se use para ebtener el numero de elemento en la lista que se ha seleccionado
          Si devuelve un valor >=0 es que si se selecciono algo en la lista
        */
        
        if (lista.getSelectedIndex()>=0) {
            //Recuperar el valor del elemento seleccionado con getSelectedValue() que devuelve un String
            String valor = lista.getSelectedValue();
            
            //captutar el nuevo valor del elemento
            String str = JOptionPane.showInputDialog(this, "Digitar nuevo valor", valor); 
                                    //Se le agrega lo de valor para que ya venga puesto por defecto en la caja para editarlo
            
            //Si no se hizo click en cancelar o en la x entonces STR sera diferente de null
            if (str!=null) {
                if (str.trim().length() >0) {//Se valida que no este vacio
                    modelo.setElementAt(str, lista.getSelectedIndex());  //Esto se usa para tomar el str como el nuevo valor y ponerlo en la posicion que estaba el valor original
                    resumen();
                }
            }   
        }
        
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        //VALIDAR SI SE HA SELECCIONADO UN ELEMENTO
        
        if (lista.getSelectedIndex()>=0) {
            //preguntar si se desea eliminar el elemento
            
            int numeroBoton = JOptionPane.showConfirmDialog(this, "Â¿Desea eliminar el elemento seleccionado?");
            //0 = yes , 1 = no , 2 = cancel , x = -1
            
            if (numeroBoton == 0) {
                modelo.removeElementAt(lista.getSelectedIndex()); // esto borra lo que este seleccionado
                resumen();
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        //Solo preguntar si desea eliminar
        int numeroBoton = JOptionPane.showConfirmDialog(this, "Desea limpiar la lista");
        
        if (numeroBoton == 0) {
            modelo.removeAllElements(); // esto es para borrar todo
            resumen();
        }
        
    }//GEN-LAST:event_btnLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JLIST_MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JLIST_MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JLIST_MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JLIST_MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JLIST_MAIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar1;
    private javax.swing.JButton btnAgregar2;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JTextField cajaAgregar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lista;
    private javax.swing.JTextField txtCincoMas;
    private javax.swing.JTextField txtCincoMenos;
    // End of variables declaration//GEN-END:variables
}
