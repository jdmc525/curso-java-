/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.gui11;
import  javax.swing.table.DefaultTableModel;  //importar clase
import javax.swing.JOptionPane;
/**
 *
 * @author Daniel
 */
public class Principal extends javax.swing.JFrame {
    //Declarar variable global(atributo) para el modelo de nuestro JTable
    DefaultTableModel modelo;

    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        btnAgregar.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TABLA 1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 104, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar)
                        .addGap(54, 54, 54)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiar)
                        .addGap(0, 126, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //inicializar el modelo del JTABLE (crear objeto, darle memoria)
        modelo = new DefaultTableModel(){
            //Truco para que la tabla no sea editable dentro de la definicion del DefaultTableModel
            
            /*Hacer cambio del comportamiento al metodo isCellEditable por medio de polimorfismo*/
            @Override
                    public boolean isCellEditable(int row, int column){
                        /*if (column == 0) {
                            return true;  //Con esto la primera columna si seria editable
                        }*/
                        return false;  //en vez de retornar True, va a retornar False y ya no va a dejar editar celdas
                    }
        };
        
        //agregar columnas
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Especie");
        modelo.addColumn("Edad");
        modelo.addColumn("Propietario");
        
        //asignar el modelo de JTABLE
        tabla.setModel(modelo);
       
        //Poner DATOS DE PRUEBA al JTable 
        /*Cada fila en el modelo puede ser un arreglo de String, siempre y cuando 
        su numero de elementos sea la cantidad de columnas del modelo
        */
        
        String fila[] = {"A001", "Michingo", "Gato", "1" , "Daniel Mejia"}; 
        modelo.addRow(fila);
        
        //Esto es para poder reutilizar un arreglo
        fila = new String[] {"A002", "Firulais", "Perro", "0.5" , "Cristiano Ronaldo"};
        modelo.addRow(fila);
        
        //Usando un array por completo nuevo
        String abc[] = {"A003", "Bucky", "Perro", "2", "Daniel Mejia"};
        modelo.addRow(abc);
        
        
    }//GEN-LAST:event_formWindowOpened

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
       //Validar que se ha seleccionada una fila para eliminar un registro
        
        if (tabla.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fila");
            
        }else{
            //Mostrar mensaje para confirmacion
            int boton = JOptionPane.showConfirmDialog(this, "Desea eliminar la fila seleccionada");
            if (boton == 0) {
                modelo.removeRow(tabla.getSelectedRow());
            }
            
        }
        
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        //Mostrar mensaje para confirmar borrar todo
        int boton = JOptionPane.showConfirmDialog(this, "Desea limpiar la tabla?");
        if (boton == 0) {
            
            //Eliminar todos los elementos del modelo
            modelo.getDataVector().removeAllElements();
            
            //Refrescar la interfaz del usuario 
            tabla.updateUI();
        }
        
        
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        //Mostrar el JDialog llamado Detalle
        
        //Esto pide dos paramteros : quien lo manda a llamar , determinar si va a ser modal o no con un bool
        Detalle d = new Detalle(this, true);  //si le pone false pues ya no es modal
        d.setVisible(true);
        
        
        //Cuando se hace click en acpetar en el Detalle nos regresa a este punto
        //Si hizo click en Aceptar, el rootPane de detalle no es NULL
        
        if (d.getRootPane() != null) {
            //Agregar la info de Detalle en el JTable
            
            String fila[] = {
              d.codigo.getText(),  //con esto se le agrega la data de las cajas de texto de Detalle a Principal, si no hacemos PUBLIC esa data en Detalle entonces no sirve
              d.nombre.getText(),
              d.especie.getText(),
              d.edad.getText(),
              d.propietario.getText(),
            };
            
            modelo.addRow(fila);
            
            //eliminar a Detalle de la memoria, ya no se ocupa esa data porque se guardo antes. 
            d.dispose(); 
            
            
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // Editar fila seleccionada
        
        //Primero validar que ha seleccionado una fila 
        if (tabla.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fila");
            
        }else{
            //Instanciar un objeto de clase Detalle
            Detalle d = new Detalle(this, true);
            
            //Antes de desplegar Detalle llenar sus cajas de texto con los datos de la fila seleccionada
            
            d.codigo.setText(tabla.getValueAt( tabla.getSelectedRow(),0).toString());
            d.nombre.setText(tabla.getValueAt( tabla.getSelectedRow(),1).toString());
            d.especie.setText(tabla.getValueAt( tabla.getSelectedRow(),2).toString());
            d.edad.setText(tabla.getValueAt(tabla.getSelectedRow(),3).toString());
            d.propietario.setText(tabla.getValueAt( tabla.getSelectedRow(),4).toString());
            
            //Mostrar el Detalle
            d.setVisible(true);
        
            //Validar la opcion seleccionada en el JDialog
            if (d.getRootPane()!= null) { //Si da click en aceptar entonces el root pane sera distinto de null
                //Actualizar la fila seleccionada
                
                modelo.setValueAt(d.codigo.getText(), tabla.getSelectedRow(), 0);
                modelo.setValueAt(d.nombre.getText(), tabla.getSelectedRow(), 1);
                modelo.setValueAt(d.especie.getText(), tabla.getSelectedRow(), 2);
                modelo.setValueAt(d.edad.getText(), tabla.getSelectedRow(), 3);
                modelo.setValueAt(d.propietario.getText(), tabla.getSelectedRow(), 4);
                
                //Eliminar el Detalle de la memoria
                d.dispose();
            }
        }
        
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
